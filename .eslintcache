[{"C:\\Harey\\maktaba\\src\\reportWebVitals.js":"1","C:\\Harey\\maktaba\\src\\components\\Header.js":"2","C:\\Harey\\maktaba\\src\\App.js":"3","C:\\Harey\\maktaba\\src\\components\\Filter.js":"4","C:\\Harey\\maktaba\\src\\components\\Main.js":"5","C:\\Harey\\maktaba\\src\\index.js":"6","C:\\Harey\\maktaba\\src\\api\\DATA.js":"7","C:\\Harey\\maktaba\\src\\api\\helpers.js":"8","C:\\Harey\\maktaba\\src\\components\\Item.js":"9","C:\\Harey\\maktaba\\src\\components\\PriceMenu.js":"10","C:\\Harey\\maktaba\\src\\components\\SortMenu.js":"11","C:\\Harey\\maktaba\\src\\components\\ProductCard.js":"12","C:\\Harey\\maktaba\\src\\contexts\\CartContext.js":"13","C:\\Harey\\maktaba\\src\\pages\\Cart.js":"14","C:\\Harey\\maktaba\\src\\pages\\CheckOut.js":"15","C:\\Harey\\maktaba\\src\\components\\CartDetail.js":"16","C:\\Harey\\maktaba\\src\\components\\OrderInformationForm.js":"17","C:\\Harey\\maktaba\\src\\pages\\Order.js":"18","C:\\Harey\\maktaba\\src\\components\\PayButton.js":"19","C:\\Harey\\maktaba\\src\\api\\config.js":"20"},{"size":362,"mtime":1606516368799,"results":"21","hashOfConfig":"22"},{"size":2960,"mtime":1607341336227,"results":"23","hashOfConfig":"22"},{"size":1680,"mtime":1607149972185,"results":"24","hashOfConfig":"22"},{"size":3219,"mtime":1606800121915,"results":"25","hashOfConfig":"22"},{"size":816,"mtime":1607146063569,"results":"26","hashOfConfig":"22"},{"size":585,"mtime":1606598142263,"results":"27","hashOfConfig":"22"},{"size":1369,"mtime":1606704051461,"results":"28","hashOfConfig":"22"},{"size":1220,"mtime":1607349656104,"results":"29","hashOfConfig":"22"},{"size":2495,"mtime":1607344767990,"results":"30","hashOfConfig":"22"},{"size":1683,"mtime":1607333383930,"results":"31","hashOfConfig":"22"},{"size":847,"mtime":1606804189001,"results":"32","hashOfConfig":"22"},{"size":1497,"mtime":1607333568830,"results":"33","hashOfConfig":"22"},{"size":1422,"mtime":1607340773197,"results":"34","hashOfConfig":"22"},{"size":415,"mtime":1607141111435,"results":"35","hashOfConfig":"22"},{"size":1883,"mtime":1607149908721,"results":"36","hashOfConfig":"22"},{"size":2003,"mtime":1607140993351,"results":"37","hashOfConfig":"22"},{"size":789,"mtime":1607149179765,"results":"38","hashOfConfig":"22"},{"size":819,"mtime":1607153054805,"results":"39","hashOfConfig":"22"},{"size":620,"mtime":1607153599379,"results":"40","hashOfConfig":"22"},{"size":114,"mtime":1607349556022,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f7vwvy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Harey\\maktaba\\src\\reportWebVitals.js",[],["93","94"],"C:\\Harey\\maktaba\\src\\components\\Header.js",[],["95","96"],"C:\\Harey\\maktaba\\src\\App.js",["97","98"],"import { useState, useEffect } from 'react'\nimport { Container } from 'semantic-ui-react';\nimport './App.css';\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport Main from './components/Main'\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Item from './components/Item'\nimport SortMenu from './components/SortMenu'\nimport { CartProvider } from './contexts/CartContext'\nimport Cart from './pages/Cart';\nimport CheckOut from './pages/CheckOut';\nimport Order from './pages/Order';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\n\nfunction App() {\n  // let query = useQuery()\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n    console.log(query.toString())\n  }, [query])\n  return (\n    <CartProvider>\n      <div className='App'>\n        <Header setQuery={setQuery} />\n        <Container style={{ display: 'flex' }}>\n          <Switch>\n            <Route exact path={['/', '/products']} render={() => (\n              <>\n                <Filter query={query} setQuery={setQuery} />\n                <div style={{ margin: 10, flex: 1, textAlign: 'right' }}>\n                  <SortMenu query={query} setQuery={setQuery} />\n                  <Main query={query} />\n                </div>\n              </>\n            )\n            } />\n            <Route path='/product/:id' component={Item} />\n            <Route path='/cart' component={Cart} />\n            <Route path='/checkout' component={CheckOut} />\n            <Route path='/orders/:code' component={Order} /> \n          </Switch>\n        </Container>\n      </div>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","C:\\Harey\\maktaba\\src\\components\\Filter.js",["99"],"import React, { useState, useEffect } from 'react'\r\nimport { Accordion, Form, Menu } from 'semantic-ui-react'\r\nimport qs from 'qs'\r\nimport PriceMenu from './PriceMenu'\r\nimport { capitalize } from '../api/helpers'\r\n\r\n\r\nconst Filter = ({ setQuery }) => {\r\n\r\n  const [filter, setFilter] = useState({\r\n    brand: [],\r\n    category: [],\r\n    color: [],\r\n    priceFrom: [],\r\n    priceTo: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    const query = qs.stringify({\r\n      _where: Object.keys(filter).map(key => {\r\n        if (key === 'priceFrom') {\r\n          return { 'price_gte': filter[key] }\r\n        }\r\n        else if (key === 'priceTo') {\r\n          return { 'price_lte': filter[key] }\r\n        }\r\n        else\r\n          return { [key]: filter[key] }\r\n      })\r\n    });\r\n    console.log(query)\r\n    setQuery(query)\r\n\r\n  }, [filter])\r\n\r\n  const [activeIndexes, setActiveIndexes] = useState([])\r\n\r\n  const menu = {\r\n    color: ['red', 'orange', 'green', 'blue'],\r\n    brand: ['adel', 'prima', 'panda'],\r\n    category: ['school products', 'office tools'],\r\n    price: []\r\n  }\r\n\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    activeIndexes.includes(index) ?\r\n      setActiveIndexes(activeIndexes.filter(item => item !== index))\r\n      :\r\n      setActiveIndexes([...activeIndexes, index])\r\n  }\r\n\r\n  const handleMenuClick = (e, data, key) => {\r\n    filter[key].includes(data.value) ?\r\n      setFilter({ ...filter, [key]: filter[key].filter(item => item !== data.value) })\r\n      :\r\n      setFilter({ ...filter, [key]: [...filter[key], data.value] })\r\n  }\r\n  return (\r\n    <div style={{ width: '20%', marginTop: 20 }}>\r\n\r\n      <Accordion as={Menu} vertical>\r\n        {\r\n          Object.keys(menu).map(key => {\r\n            return (\r\n              <Menu.Item key={key}>\r\n                <Accordion.Title\r\n                  active={activeIndexes.includes(key)}\r\n                  content={capitalize(key)}\r\n                  index={key}\r\n                  onClick={handleClick}\r\n                />\r\n                {\r\n                  key === 'price' ?\r\n                    <Accordion.Content active={activeIndexes.includes(key)}>\r\n                      <PriceMenu filter={filter} setFilter={setFilter} />\r\n                    </Accordion.Content>\r\n                    :\r\n                    <Accordion.Content active={activeIndexes.includes(key)}>\r\n                      <Form>\r\n                        <Form.Group grouped >\r\n                          {menu[key].map((value, index) => {\r\n                            return (<Form.Checkbox\r\n                              key={index} label={capitalize(value)}\r\n                              name={value}\r\n                              checked={filter[key].includes(value) ? true : false}\r\n                              value={value}\r\n                              onClick={(e, data) => handleMenuClick(e, data, key)}\r\n                            />)\r\n                          })}\r\n                        </Form.Group>\r\n                      </Form>\r\n                    </Accordion.Content>\r\n                }\r\n              </Menu.Item>\r\n            )\r\n          })\r\n        }\r\n      </Accordion>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Filter;","C:\\Harey\\maktaba\\src\\components\\Main.js",["100"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport { getAllProducts } from '../api/helpers'\r\nimport ProductCard from './ProductCard'\r\n\r\n\r\nexport default function Main({ query }) {\r\n  const [products, setProducts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n       const data = await getAllProducts(query.toString())\r\n       setProducts(data)\r\n    }\r\n    fetchProducts()\r\n  }, [query])\r\n\r\n\r\n  return (\r\n\r\n    <Grid >\r\n      <Grid.Row >\r\n        {products.map(product => (\r\n          <Grid.Column key={product.id} style={{ marginTop: 20, padding: 8 }} computer='5' tablet='8' mobile='16' >\r\n            <ProductCard product={product} />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid.Row>\r\n    </Grid >\r\n\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\index.js",[],["101","102"],"C:\\Harey\\maktaba\\src\\api\\DATA.js",[],"C:\\Harey\\maktaba\\src\\api\\helpers.js",[],"C:\\Harey\\maktaba\\src\\components\\Item.js",[],"C:\\Harey\\maktaba\\src\\components\\PriceMenu.js",[],"C:\\Harey\\maktaba\\src\\components\\SortMenu.js",["103"],"import React, { useState } from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport qs from 'qs'\r\nexport default function SortMenu({ query, setQuery }) {\r\n  const [sortOption, setSortOption] = useState()\r\n  const options = [\r\n    { text: 'Price: low to high', value: 'ASC' },\r\n    { text: 'Price high to low', value: 'DESC' }\r\n  ]\r\n  return (\r\n    <div>\r\n      <span>Sort By: </span>\r\n      <Dropdown\r\n        options={options}\r\n        selection\r\n        value={sortOption}\r\n        placeholder='Select Sort Option'\r\n        onChange={(e, { value }) => {\r\n          query.indexOf('_sort') === -1 ?\r\n          setQuery(query + `&_sort=price:${value}`)\r\n          : \r\n          setQuery(query.slice(0,query.indexOf('&_sort')) + `&_sort=price:${value}`)\r\n          setSortOption(value)\r\n        }\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\components\\ProductCard.js",["104"],"import React, { useContext } from 'react'\r\nimport { Card, Header, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { CartContext } from '../contexts/CartContext'\r\nexport default function ProductCard({ product }) {\r\n  const { addProductToCart } = useContext(CartContext)\r\n\r\n  const handleClick = (e, data) => {\r\n    e.preventDefault()\r\n    addProductToCart(product)\r\n  }\r\n  \r\n  return (\r\n    <Card as={Link} to={`/product/${product.id}`} raised centered style={{ textAlign: 'left' }}>\r\n      <Card.Content textAlign='center'>\r\n        <img src={product.imageURL} style={{ height: '200px', margin: 10, maxWidth: '90%' }} />\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <Header textAlign='center' size='small'>{product.title.toUpperCase()}</Header>\r\n        <Card.Meta>\r\n          <span className='date'>{product.category}</span>\r\n        </Card.Meta>\r\n        <Card.Description style={{ display: 'flex',justifyContent: 'space-between' }}>\r\n          <Header style={{margin:0}} size='small' >{product.brand}</Header>\r\n          <Header style={{margin:0}} size='small' color={product.color}>{product.color}</Header>\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content textAlign='center' >\r\n        <Header size='small' color='blue'>{product.price} EGP</Header>\r\n        <Button fluid color='teal' content='ADD TO CART' icon='cart' floated='right'\r\n          onClick={handleClick}\r\n        />\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\contexts\\CartContext.js",[],"C:\\Harey\\maktaba\\src\\pages\\Cart.js",[],"C:\\Harey\\maktaba\\src\\pages\\CheckOut.js",["105"],"import { useFormik, yupToFormErrors } from 'formik'\r\nimport React, { useContext } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport CartDetail from '../components/CartDetail'\r\nimport OrderInformationForm from '../components/OrderInformationForm'\r\nimport * as Yup from 'yup'\r\nimport { CartContext } from '../contexts/CartContext'\r\nimport { addOrder, getAllProducts } from '../api/helpers'\r\nimport { useHistory } from 'react-router-dom'\r\nexport default function CheckOut() {\r\n  const { cart } = useContext(CartContext)\r\n  const history = useHistory()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: '',\r\n      lastname: '',\r\n      email: '',\r\n      phonenumber: '',\r\n      address: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      firstname: Yup.string().required(),\r\n      lastname: Yup.string().required(),\r\n      email: Yup.string().email().required()\r\n    }),\r\n    onSubmit: async values => {\r\n      const { items = [] } = cart\r\n      const productsIDs = items.map(product => `id_in=${product.id}`)\r\n      const query = productsIDs.join('&')\r\n      let total = 0\r\n      const products = await getAllProducts(query)\r\n      products.forEach(product => {\r\n        const item = items.find(item => item.id === product.id)\r\n        total += product.price * item.quantity\r\n      })\r\n      const order = await addOrder({\r\n        ...values,\r\n        total: `${total}`\r\n      })\r\n      history.push(`/orders/${order.code}`)\r\n    }\r\n  })\r\n\r\n  const { getFieldProps, errors, touched } = formik\r\n  return (\r\n    <div style={{ flex: 1, marginTop: 20 }}>\r\n      <CartDetail />\r\n      <OrderInformationForm getFieldProps={getFieldProps} errors={errors} touched={touched} />\r\n      <Button disabled={cart.total <= 0 || cart.items.length === 0} \r\n      color='vk' content='Continue To Payment' onClick={formik.handleSubmit} />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\components\\CartDetail.js",["106"],"import React, { useContext } from 'react'\r\nimport { CartContext } from '../contexts/CartContext'\r\nimport { Table, Button } from 'semantic-ui-react'\r\nexport default function CartDetail() {\r\n  const { cart, removeFromCart } = useContext(CartContext)\r\n\r\n  return (\r\n\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Price</Table.HeaderCell>\r\n            <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n            <Table.HeaderCell>Total</Table.HeaderCell>\r\n            <Table.HeaderCell>Remove</Table.HeaderCell>\r\n\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {\r\n            cart.count === 0 ?\r\n              <Table.Row>\r\n                <Table.Cell></Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n                <Table.Cell textAlign='center'>No Products In Cart</Table.Cell>\r\n              </Table.Row>\r\n              :\r\n              cart.items.map((product, index) => (\r\n                <Table.Row key={index}>\r\n                  <Table.Cell textAlign='center'><img src={product.imageURL} height={50} /></Table.Cell>\r\n                  <Table.Cell>{product.title}</Table.Cell>\r\n                  <Table.Cell>{product.price}</Table.Cell>\r\n                  <Table.Cell>{product.quantity}</Table.Cell>\r\n                  <Table.Cell>{product.price * product.quantity}</Table.Cell>\r\n                  <Table.Cell><Button onClick={() => removeFromCart(product)} compact icon='remove' /></Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n        </Table.Body>\r\n\r\n        <Table.Footer>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Total Amount:</Table.HeaderCell>\r\n            <Table.HeaderCell>{cart.total} EGP</Table.HeaderCell>\r\n            {[1, 2, 3, 4].map((item, index) => <Table.HeaderCell key={index} />)}\r\n          </Table.Row>\r\n        </Table.Footer>\r\n      </Table>\r\n\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\components\\OrderInformationForm.js",[],"C:\\Harey\\maktaba\\src\\pages\\Order.js",["107","108","109"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { getOrder } from '../api/helpers'\r\nimport CartDetail from '../components/CartDetail'\r\nimport PayButton from '../components/PayButton'\r\n\r\nexport default function Order() {\r\n  const { code } = useParams()\r\n  const [orderDetails, setOrderDetails] = useState()\r\n  useEffect(() => {\r\n\r\n    const fetchOrder = async () => {\r\n      const order = await getOrder(code)\r\n      setOrderDetails(order)\r\n    }\r\n    fetchOrder()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div style={{ flex: 1, marginTop: 20 }}>\r\n      <CartDetail />\r\n      <div style={{ textAlign: 'center' }}>\r\n        {orderDetails && <PayButton total={orderDetails.total} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Harey\\maktaba\\src\\components\\PayButton.js",[],"C:\\Harey\\maktaba\\src\\api\\config.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":25,"nodeType":"118","messageId":"119","endLine":7,"endColumn":35},{"ruleId":"116","severity":1,"message":"120","line":15,"column":10,"nodeType":"118","messageId":"119","endLine":15,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":34,"column":6,"nodeType":"123","endLine":34,"endColumn":14,"suggestions":"124"},{"ruleId":"116","severity":1,"message":"125","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},{"ruleId":"116","severity":1,"message":"128","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":10},{"ruleId":"129","severity":1,"message":"130","line":16,"column":9,"nodeType":"131","endLine":16,"endColumn":96},{"ruleId":"116","severity":1,"message":"132","line":1,"column":21,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":33,"column":50,"nodeType":"131","endLine":33,"endColumn":92},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"133","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"134","line":18,"column":6,"nodeType":"123","endLine":18,"endColumn":8,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],["136"],["137"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setQuery'. Either include it or remove the dependency array. If 'setQuery' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],"'useContext' is defined but never used.",["136"],["137"],"'qs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'yupToFormErrors' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'code'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [filter, setQuery]",{"range":"144","text":"145"},"Update the dependencies array to be: [code]",{"range":"146","text":"147"},[814,822],"[filter, setQuery]",[583,585],"[code]"]